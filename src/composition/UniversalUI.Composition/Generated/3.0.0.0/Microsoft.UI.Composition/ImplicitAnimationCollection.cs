// <auto-generated>
#pragma warning disable 108 // new keyword hiding
#pragma warning disable 114 // new keyword hiding
namespace UniversalUI.Composition
{
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
	[global::UniversalUI.NotImplemented]
#endif
	public partial class ImplicitAnimationCollection : global::UniversalUI.Composition.CompositionObject, global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.KeyValuePair<string, global::UniversalUI.Composition.ICompositionAnimationBase>>, global::System.Collections.Generic.IDictionary<string, global::UniversalUI.Composition.ICompositionAnimationBase>
	{
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		internal ImplicitAnimationCollection()
		{
		}
#endif
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::UniversalUI.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public uint Size
		{
			get
			{
				throw new global::System.NotImplementedException("The member uint ImplicitAnimationCollection.Size is not implemented. For more information, visit https://aka.platform.uno/notimplemented#m=uint%20ImplicitAnimationCollection.Size");
			}
		}
#endif
		// Forced skipping of method UniversalUI.Composition.ImplicitAnimationCollection.First()
		// Forced skipping of method UniversalUI.Composition.ImplicitAnimationCollection.Lookup(string)
		// Forced skipping of method UniversalUI.Composition.ImplicitAnimationCollection.Size.get
		// Forced skipping of method UniversalUI.Composition.ImplicitAnimationCollection.HasKey(string)
		// Forced skipping of method UniversalUI.Composition.ImplicitAnimationCollection.GetView()
		// Forced skipping of method UniversalUI.Composition.ImplicitAnimationCollection.Insert(string, UniversalUI.Composition.ICompositionAnimationBase)
		// Forced skipping of method UniversalUI.Composition.ImplicitAnimationCollection.Remove(string)
		// Forced skipping of method UniversalUI.Composition.ImplicitAnimationCollection.Clear()
		// Processing: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, UniversalUI.Composition.ICompositionAnimationBase>>
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		// DeclaringType: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, UniversalUI.Composition.ICompositionAnimationBase>>
		[global::UniversalUI.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public global::System.Collections.Generic.IEnumerator<global::System.Collections.Generic.KeyValuePair<string, global::UniversalUI.Composition.ICompositionAnimationBase>> GetEnumerator()
		{
			throw new global::System.NotSupportedException();
		}
#endif
		// Processing: System.Collections.IEnumerable
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		// DeclaringType: System.Collections.IEnumerable
		[global::UniversalUI.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		 global::System.Collections.IEnumerator global::System.Collections.IEnumerable.GetEnumerator()
		{
			throw new global::System.NotSupportedException();
		}
#endif
		// Processing: System.Collections.Generic.IDictionary<string, UniversalUI.Composition.ICompositionAnimationBase>
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		// DeclaringType: System.Collections.Generic.IDictionary<string, UniversalUI.Composition.ICompositionAnimationBase>
		[global::UniversalUI.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public void Add(string key, global::UniversalUI.Composition.ICompositionAnimationBase value)
		{
			throw new global::System.NotSupportedException();
		}
#endif
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		// DeclaringType: System.Collections.Generic.IDictionary<string, UniversalUI.Composition.ICompositionAnimationBase>
		[global::UniversalUI.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public bool ContainsKey(string key)
		{
			throw new global::System.NotSupportedException();
		}
#endif
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		// DeclaringType: System.Collections.Generic.IDictionary<string, UniversalUI.Composition.ICompositionAnimationBase>
		[global::UniversalUI.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public bool Remove(string key)
		{
			throw new global::System.NotSupportedException();
		}
#endif
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		// DeclaringType: System.Collections.Generic.IDictionary<string, UniversalUI.Composition.ICompositionAnimationBase>
		[global::UniversalUI.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public bool TryGetValue(string key, out global::UniversalUI.Composition.ICompositionAnimationBase value)
		{
			throw new global::System.NotSupportedException();
		}
#endif
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::UniversalUI.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public global::UniversalUI.Composition.ICompositionAnimationBase this[string key]
		{
			get
			{
				throw new global::System.NotSupportedException();
			}
			set
			{
				throw new global::System.NotSupportedException();
			}
		}
#endif
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::UniversalUI.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public global::System.Collections.Generic.ICollection<string> Keys
		{
			get
			{
				throw new global::System.NotSupportedException();
			}
		}
#endif
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::UniversalUI.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public global::System.Collections.Generic.ICollection<global::UniversalUI.Composition.ICompositionAnimationBase> Values
		{
			get
			{
				throw new global::System.NotSupportedException();
			}
		}
#endif
		// Processing: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, UniversalUI.Composition.ICompositionAnimationBase>>
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		// DeclaringType: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, UniversalUI.Composition.ICompositionAnimationBase>>
		[global::UniversalUI.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public void Add(global::System.Collections.Generic.KeyValuePair<string, global::UniversalUI.Composition.ICompositionAnimationBase> item)
		{
			throw new global::System.NotSupportedException();
		}
#endif
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		// DeclaringType: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, UniversalUI.Composition.ICompositionAnimationBase>>
		[global::UniversalUI.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public void Clear()
		{
			throw new global::System.NotSupportedException();
		}
#endif
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		// DeclaringType: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, UniversalUI.Composition.ICompositionAnimationBase>>
		[global::UniversalUI.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public bool Contains(global::System.Collections.Generic.KeyValuePair<string, global::UniversalUI.Composition.ICompositionAnimationBase> item)
		{
			throw new global::System.NotSupportedException();
		}
#endif
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		// DeclaringType: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, UniversalUI.Composition.ICompositionAnimationBase>>
		[global::UniversalUI.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public void CopyTo(global::System.Collections.Generic.KeyValuePair<string, global::UniversalUI.Composition.ICompositionAnimationBase>[] array, int arrayIndex)
		{
			throw new global::System.NotSupportedException();
		}
#endif
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		// DeclaringType: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string, UniversalUI.Composition.ICompositionAnimationBase>>
		[global::UniversalUI.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public bool Remove(global::System.Collections.Generic.KeyValuePair<string, global::UniversalUI.Composition.ICompositionAnimationBase> item)
		{
			throw new global::System.NotSupportedException();
		}
#endif
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::UniversalUI.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public int Count
		{
			get
			{
				throw new global::System.NotSupportedException();
			}
		}
#endif
#if __ANDROID__ || __IOS__ || __TVOS__ || IS_UNIT_TESTS || __WASM__ || __SKIA__ || __NETSTD_REFERENCE__
		[global::UniversalUI.NotImplemented("__ANDROID__", "__IOS__", "__TVOS__", "IS_UNIT_TESTS", "__WASM__", "__SKIA__", "__NETSTD_REFERENCE__")]
		public bool IsReadOnly
		{
			get
			{
				throw new global::System.NotSupportedException();
			}
		}
#endif
	}
}
